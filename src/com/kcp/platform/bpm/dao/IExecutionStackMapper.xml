<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcp.platform.bpm.dao.IExecutionStackMapper">
	<resultMap id="executionStackMapper" type="com.kcp.platform.bpm.entity.ExecutionStack"> 
			<result property="stackId" column="STACK_ID" />  
			<result property="actDefId" column="ACT_DEF_ID" />  
			<result property="nodeId" column="NODE_ID" />  
			<result property="nodeName" column="NODE_NAME" />  
			<result property="startTime" column="START_TIME" />  
			<result property="endTime" column="END_TIME" />  
			<result property="assignees" column="ASSIGNEES" />  
			<result property="isMultiTask" column="IS_MULTI_TASK" />  
			<result property="parentId" column="PARENT_ID" />  
			<result property="actInstId" column="ACT_INST_ID" />  
			<result property="taskIds" column="TASK_IDS" />  
			<result property="nodePath" column="NODE_PATH" />  
			<result property="depth" column="DEPTH" />  
			<result property="taskToken" column="TASK_TOKEN" />  
	</resultMap>
	<!--查询(不分页)-->
	<select id="findExecutionStack" parameterType="hashmap" resultMap="executionStackMapper">
		SELECT 
				STACK_ID,
				ACT_DEF_ID,
				NODE_ID,
				NODE_NAME,
				START_TIME,
				END_TIME,
				ASSIGNEES,
				IS_MULTI_TASK,
				PARENT_ID,
				ACT_INST_ID,
				TASK_IDS,
				NODE_PATH,
				DEPTH,
				TASK_TOKEN
		FROM BPM_EXE_STACK
		WHERE 1 = 1 
			<if test="actInstId != null and actInstId != '' ">
				AND ACT_INST_ID = #{actInstId}
			</if>
			<if test="nodeId != null and nodeId != '' ">
				AND NODE_ID = #{nodeId}
			</if>
			<if test="taskToken != null and taskToken != '' ">
				AND TASK_TOKEN=#{taskToken}
			</if>
			<if test="depth != null and depth != '' ">
				AND DEPTH=#{depth}
			</if>
			
		ORDER BY START_TIME DESC
	</select>
	
	<!--根据Id进行查询-->
	<select id="getExecutionStackById" parameterType="String" resultMap="executionStackMapper">
		SELECT 
				STACK_ID,
				ACT_DEF_ID,
				NODE_ID,
				NODE_NAME,
				START_TIME,
				END_TIME,
				ASSIGNEES,
				IS_MULTI_TASK,
				PARENT_ID,
				ACT_INST_ID,
				TASK_IDS,
				NODE_PATH,
				DEPTH,
				TASK_TOKEN
		FROM BPM_EXE_STACK
		WHERE STACK_ID=#{id}
	</select>
	
	<!--新增-->
	<insert id="addExecutionStack" parameterType="com.kcp.platform.bpm.entity.ExecutionStack">
		INSERT INTO BPM_EXE_STACK(
				STACK_ID,
				ACT_DEF_ID,
				NODE_ID,
				NODE_NAME,
				START_TIME,
				END_TIME,
				ASSIGNEES,
				IS_MULTI_TASK,
				PARENT_ID,
				ACT_INST_ID,
				TASK_IDS,
				NODE_PATH,
				DEPTH,
				TASK_TOKEN
		 )
		values(
				#{stackId,jdbcType=VARCHAR},
				#{actDefId,jdbcType=VARCHAR},
				#{nodeId,jdbcType=VARCHAR},
				#{nodeName,jdbcType=VARCHAR},
				#{startTime,jdbcType=TIMESTAMP},
				#{endTime,jdbcType=TIMESTAMP},
				#{assignees,jdbcType=VARCHAR},
				#{isMultiTask,jdbcType=NUMERIC},
				#{parentId,jdbcType=VARCHAR},
				#{actInstId,jdbcType=VARCHAR},
				#{taskIds,jdbcType=VARCHAR},
				#{nodePath,jdbcType=VARCHAR},
				#{depth,jdbcType=INTEGER},
				#{taskToken,jdbcType=VARCHAR}
		 )
    </insert>
    
    <!--修改-->
    <update id="updateExecutionStack" parameterType="com.kcp.platform.bpm.entity.ExecutionStack">
		UPDATE BPM_EXE_STACK SET
			NODE_NAME=#{nodeName,jdbcType=VARCHAR},
			START_TIME=#{startTime,jdbcType=TIMESTAMP},
			END_TIME=#{endTime,jdbcType=TIMESTAMP},
			ASSIGNEES=#{assignees,jdbcType=VARCHAR},
			IS_MULTI_TASK=#{isMultiTask,jdbcType=INTEGER},
			PARENT_ID=#{parentId,jdbcType=VARCHAR},
			ACT_INST_ID=#{actInstId,jdbcType=VARCHAR},
			NODE_PATH=#{nodePath,jdbcType=VARCHAR},
			DEPTH=#{depth,jdbcType=INTEGER},
			TASK_TOKEN=#{taskToken,jdbcType=VARCHAR}
		where STACK_ID=#{stackId}
    </update>
    
	<!-- 物理删除 -->
    <delete id="deleteExecutionStack" parameterType="String">
     	DELETE FROM BPM_EXE_STACK WHERE STACK_ID=#{id}
    </delete>
    
    <select id="getByParentId" resultMap="executionStackMapper">
		SELECT * from BPM_EXE_STACK where PARENT_ID=#{parentId}
	</select>
	
	<delete id="delByActDefId" parameterType="String">
     	DELETE FROM BPM_EXE_STACK WHERE ACT_INST_ID IN(SELECT ACT_INST_ID FROM BPM_PRO_RUN WHERE ACT_DEF_ID=#{actDefId})
    </delete>
    
    <delete id="delByActInstId" parameterType="String">
     	DELETE FROM BPM_EXE_STACK WHERE ACT_INST_ID IN(SELECT ACT_INST_ID FROM BPM_PRO_RUN WHERE ACT_INST_ID=#{actInstId})
    </delete>
    
</mapper>